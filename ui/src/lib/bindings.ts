// This file has been generated by Specta. DO NOT EDIT.

export type RecordStoreChanged = { node_key: string; records: ([string, string, string])[] };

export type TauRpcApiInputTypes =
  | { proc_name: "new_node"; input_type: null }
  | { proc_name: "add_bootstrap_node"; input_type: { __taurpc_type: string } }
  | { proc_name: "remove_bootstrap_node"; input_type: { __taurpc_type: string } }
  | { proc_name: "put_record"; input_type: [string, string | null, string] }
  | { proc_name: "bootstrap_nodes_changed"; input_type: { __taurpc_type: ([string, string])[] } }
  | { proc_name: "routing_table_changed"; input_type: { __taurpc_type: RoutingTableChanged } }
  | { proc_name: "record_store_changed"; input_type: { __taurpc_type: RecordStoreChanged } };

export type RoutingTableChanged = { node_key: string; buckets: { [key: number]: ([string, string, string])[] } };

export type TauRpcApiOutputTypes =
  | { proc_name: "new_node"; output_type: NodeInfo }
  | { proc_name: "add_bootstrap_node"; output_type: null }
  | { proc_name: "remove_bootstrap_node"; output_type: null }
  | { proc_name: "put_record"; output_type: null }
  | { proc_name: "bootstrap_nodes_changed"; output_type: null }
  | { proc_name: "routing_table_changed"; output_type: null }
  | { proc_name: "record_store_changed"; output_type: null };

export type NodeInfo = {
  key: string;
  addr: string;
  is_bootstrap: boolean;
  buckets: { [key: number]: ([string, string, string])[] };
  records: ([string, string, string])[];
};

const ARGS_MAP = {
  "":
    "{\"routing_table_changed\":[\"routing_table\"],\"put_record\":[\"node_key\",\"record_key\",\"value\"],\"record_store_changed\":[\"records\"],\"remove_bootstrap_node\":[\"key\"],\"new_node\":[],\"add_bootstrap_node\":[\"key\"],\"bootstrap_nodes_changed\":[\"bootstrap_nodes\"]}",
};
import { createTauRPCProxy as createProxy } from "taurpc";

export const createTauRPCProxy = () => createProxy<Router>(ARGS_MAP);

type Router = {
  "": [TauRpcApiInputTypes, TauRpcApiOutputTypes];
};
